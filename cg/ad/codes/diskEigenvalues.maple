#
# Determine eigenvalues for eigenfunctions of the Laplace operator on a disk
# Dirichlet BCs r=b:
#    f(z) = Jn(b*z)
#  Neumann BCs r=b:
#   f(z) = Jnp(b*z)
#
# WDH July 23, 2021
#
# restart; currentdir("/Users/henshaw/Dropbox/CG6backup/overtureFramework/cg/ad/codes"); currentdir("/Users/henshaw/Dropbox/CG6backup/overtureFramework/cg/ad/codes"); read "diskEigenvalues.maple";
#
# But where is the file written?
# restart; read '/Users/henshaw/Dropbox/CG6backup/overtureFramework/cg/ad/codes/diskEigenvalues.maple';
#
# Matlab file for cgWaveHoltz:
#  restart; currentdir("/Users/henshaw/Dropbox/research/cgwave/doc/codes"); currentdir("/Users/henshaw/Dropbox/research/cgwave/doc/codes"); read "/Users/henshaw/Dropbox/CG6backup/overtureFramework/cg/ad/codes/diskEigenvalues.maple";
clear:
interface(quiet=true,echo=0):

writeMatlabFile := 1; # save eigenvalues to a Matlab file

Digits:=15;
j:=BesselJ(m,rr):
y:=BesselY(m,rr):

jp:=diff(BesselJ(m,rr),rr):
yp:=diff(BesselY(m,rr),rr):

if( writeMatlabFile=1 )then
  numBC:=1; # Dirichlet and Neumann BC's 
else
  numBC:=2; # Dirichlet and Neumann BC's 
fi;
for ibc from 1 by 1 to numBC do

  if( ibc=1 )then
    # Dirichlet BC's on both sides
    if( writeMatlabFile=1 )then
      fileName := "diskEigenvaluesDirichlet.m";
    else
      fileName := "diskEigenvaluesLaplaceEquationDirichlet.h";
    fi;

    # f:=subs(rr=a*z,j)*subs(rr=b*z,y) - subs(rr=b*z,j)*subs(rr=a*z,y): # annulus
    f:=subs(rr=b*z,j);
  else
    # Neumann BC's on both sides
    if( writeMatlabFile=1 )then
      fileName := "diskEigenvaluesNeumann.m";
    else
      fileName := "diskEigenvaluesLaplaceEquationNeumann.h"; 
    fi;

    # f:=subs(rr=a*z,jp)*subs(rr=b*z,yp) - subs(rr=b*z,jp)*subs(rr=a*z,yp):
    f:=subs(rr=b*z,jp);
  fi:

  a:=1/2; b:=1; 
  # m:=2;


  # --- compute roots to f(z,m)=0 
  if( writeMatlabFile=1 )then
    nr:=10: # first nr roots of f
    nm:=30; # 12: # first nm bessel functions

    nr:=15;
    nm:=30; # 12;
    
  else
    nr:=4: # first nr roots of f
    nm:=3: # first nm bessel functions 
  fi;

  # plot f(z) for different m
  pl := [ subs(m=mm,f) $mm=0..nm-1]:
  plot( pl,z=0..20 ):
  # plot( f,z=0..20);

  w:=array(1..nm,1..nr):
  # n = Bessel order : Jn, Yn 
  for n from 0 by 1 to nm-1 do
    lastr:=1:
    toavoid:={}:
    # r = root number 
    for r from 1 by 1 to nr do
      # Find the next root, avoiding previous roots
      if( writeMatlabFile=1 )then
        if( r=1 and n=0 )then
          # printf("(1) n=%d, r=%d\n",n,r);
          w[n+1,r] := fsolve( subs(m=n,f)=0,z, avoid=toavoid, lastr..4+n);
        elif( r=1 )then
          # printf("(2) n=%d, r=%d\n",n,r);
          w[n+1,r] := fsolve( subs(m=n,f)=0,z, avoid=toavoid, w[n,r]..w[n,r]+3);
        else
          # printf("(3) n=%d, r=%d\n",n,r);
          w[n+1,r] := fsolve( subs(m=n,f)=0,z, avoid=toavoid, w[n+1,r-1]..w[n+1,r-1]+5);
        fi;
      else
        w[n+1,r] := fsolve( subs(m=n,f)=0,z, avoid=toavoid, lastr..max(10,lastr+10));
      fi;
      # printf(" w[%d,%d]=%s\n",n+1,r,convert(w[n+1,r],string));

      printf(" n=%d, r=%d, root w=%20.8e\n",n,r,w[n+1,r]);

      toavoid:= toavoid union {z=w[n+1,r]}:
      lastr := w[n+1,r]:
      # print(toavoid):
    end do;
    printf("\n");
  end do;


  if( writeMatlabFile=1 )then
    # MATLAB FILE
    file:=fopen(fileName, WRITE):
    fprintf(file,"%% ---- Eigenvalues for eigenfunctions of the heat equation on an disk ----\n"):
    fprintf(file,"%% File written by cg/ad/codes/diskEigenvalues.maple \n"):
    fprintf(file,"%% numBesselOrderDBC  : Bessel orders are m=0,1,2,...,numBesselOrderDBC-1 \n"):
    fprintf(file,"%% numRootDBC         : number of roots\n"):
    if( ibc=1 )then
      fprintf(file,"%% ----------- DIRCHLET BCs at r=rb ----- \n"):
    else
      fprintf(file,"%% ----------- NEUMANN BCs at  r=rb ----- \n"):
    fi;
    fprintf(file,"%% Solution is u = cJ*Jn(lambda*r)\n");
    fprintf(file," rb=%19.14e; \n",b):
    fprintf(file," numBesselOrder=%d; numRoot=%d;\n",nm,nr):
    fprintf(file," lambdav = [...\n"):
  
    for n from 0 to nm-1 do
  
      for mr from 1 to nr do
  
        z1 := w[n+1, mr]:
  
        fprintf(file," %19.14e; ...\n",z1):
  
      od:
    od:
  
    fprintf(file,"];\n"):
    fclose(file):
    printf(" *** output written to file %s\n",convert(fileName,string)):

  else

    file:=fopen(fileName, WRITE):
    fprintf(file,"// ---- Eigenvalues for eigenfunctions of the heat equation on an disk ----\n"):
    fprintf(file,"// File written by cg/ad/codes/diskEigenvalues.maple \n"):
    fprintf(file,"// numBesselOrderDBC  : Bessel orders are m=0,1,2,...,numBesselOrderDBC-1 \n"):
    fprintf(file,"// numRootDBC         : number of roots\n"):
    if( ibc=1 )then
      fprintf(file,"// ----------- DIRCHLET BCs at r=rb ----- \n"):
    else
      fprintf(file,"// ----------- NEUMANN BCs at r=rb ----- \n"):
    fi;
    fprintf(file,"// Solution is u = cJ*Jn(lambda*r)\n");
    fprintf(file," const Real ra=%19.14e, rb=%19.14e; \n",a,b):
    fprintf(file," const int numBesselOrder=%d, numRoot=%d;\n",nm,nr):
    fprintf(file," Real diskEigs[numBesselOrder][numRoot]={\n"):
  
    for n from 0 to nm-1 do
  
      fprintf(file," { // Roots for f(z,n) = Jn(b*z) (Dirichlet) or Jnp(b*z) (Neumann), n=%d\n",n):
  
      for mr from 1 to nr do
  
        z1 := w[n+1, mr]:
  
        # printf(" Jn(%e)=%e : n=%d m=%d xp =%19.14e \n",z1,BesselJ(n,z1),n,mr,z1):
        
        fprintf(file,"    %19.14e",z1):
        if mr<nr then
          fprintf(file,",\n"):
        else
          fprintf(file,"}, // end n=%d\n",n):
        fi:
  
      od:
    od:
  
    fprintf(file,"                               };\n"):
    fclose(file):
    printf(" *** output written to file %s\n",convert(fileName,string)):



  fi

od; # for ibc 


